on:
  push:
    paths:
      - .github/workflows/build-package-windows.yml
  pull_request:
    paths:
      - .github/workflows/build-package-windows.yml
permissions:
  contents: write
  pull-requests: write
jobs:
  build-package-windows:
    #    runs-on: [self-hosted, windows, x64, twincat]
    runs-on: windows-2019
    strategy:
      matrix:
        build_type: [Release, Debug]
    steps:
      - uses: actions/checkout@v4

      - name: Configure and Build ADS
        shell: pwsh
        run: |
          $env:TwinCAT_ROOT="C:\TwinCAT"
          echo "TwinCAT_ROOT is set to $env:TwinCAT_ROOT"
          
          mkdir build_twincat
          cd build_twincat
          cmake .. -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DUSE_TWINCAT_ROUTER=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON
          cmake --build . --config ${{ matrix.build_type }}
          cd ..
          mkdir build_no_twincat
          cd build_no_twincat
          cmake .. -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DUSE_TWINCAT_ROUTER=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON
          cmake --build . --config ${{ matrix.build_type }}
      #      - name: Package ADS with CPack and Rename Installer
      #        shell: pwsh
      #        run: |
      #          cd build_twincat
      #          cpack -G NSIS64 -C ${{ matrix.build_type }}
      #
      #          # 确保 cpack 生成了文件
      #          $installer = Get-ChildItem -Filter "*.exe" | Select-Object -First 1
      #          if ($installer -eq $null) {
      #            echo "Error: No installer found!"
      #            exit 1
      #          }
      #
      #          # 获取原始名字并添加后缀
      #          $originalName = $installer.Name
      #          $suffix = "${{ matrix.build_type }}".ToLower()
      #          $newName = "$originalName-$suffix.exe"
      #          Rename-Item -Path $installer.FullName -NewName $newName
      #          cd ..
      #
      #          cd build_no_twincat
      #          cpack -G NSIS64 -C ${{ matrix.build_type }}
      #
      #          # 确保 cpack 生成了文件
      #          $installer = Get-ChildItem -Filter "*.exe" | Select-Object -First 1
      #          if ($installer -eq $null) {
      #            echo "Error: No installer found!"
      #            exit 1
      #          }
      #
      #          # 获取原始名字并添加后缀
      #          $originalName = $installer.Name
      #          $newName = "$originalName-$suffix.exe"
      #          Rename-Item -Path $installer.FullName -NewName $newName
      #          cd ..


      - name: Extract Version from Release
        shell: pwsh
        run: |
          cd build
          $exeFile = Get-ChildItem -Filter "ads-*.exe" | Sort-Object Name -Descending | Select-Object -First 1
          if ($exeFile.Name -match "ads-([\d\.]+)") {
            echo "VERSION=$($matches[1])" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          } else {
            echo "Failed to extract version"
            exit 1
          }
      - name: Release the Package
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ env.VERSION }}"
          name: "${{ env.VERSION }}"
          files: |
            build_twincat/*.exe
            build_no_twincat/*.exe