name: Build and Package ADS on Windows

on:
 push:
   paths:
     - .github/workflows/build-package-windows.yml
 pull_request:
   paths:
     - .github/workflows/build-package-windows.yml


permissions:
  contents: write
  pull-requests: write

jobs:
  build-package-windows:
#    runs-on: [self-hosted, windows, x64, twincat]
    runs-on: windows-2019
    strategy:
      matrix:
        build_type: [Release, Debug]
    steps:
      - uses: actions/checkout@v4

      - name: Configure and Build ADS (Both ads::ads and ads::ads_twincat)
        shell: pwsh
        run: |
          $env:TwinCAT_ROOT="C:\TwinCAT"
          echo "TwinCAT_ROOT is set to $env:TwinCAT_ROOT"
          mkdir build
          cd build
          cmake .. -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DUSE_TWINCAT_ROUTER=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON
          cmake --build . --config ${{ matrix.build_type }}
          cmake .. -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DUSE_TWINCAT_ROUTER=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON
          cmake --build . --config ${{ matrix.build_type }}

      - name: Package ADS with CPack
        shell: pwsh
        run: |
          cd build
          cpack -G NSIS64 -C ${{ matrix.build_type }}

      - name: Extract Version from Release
        shell: pwsh
        run: |
          cd build
          echo "Checking for ADS executable..."
          Get-ChildItem  # 先列出所有文件，方便调试

          # 修改 Filter 以匹配正确的文件名
          $exeFile = Get-ChildItem -Filter "ads-*-win64.exe" | Select-Object -First 1
          if ($exeFile) {
            echo "Found executable: $($exeFile.Name)"
          } else {
            echo "No matching executable found!"
            exit 1
          }

          # 使用正确的正则匹配版本号
          if ($exeFile.Name -match "ads-([0-9]+\.[0-9]+\.[0-9]+)-win64.exe") {
            echo "Extracted version: $($matches[1])"
            echo "VERSION=$($matches[1])" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          } else {
            echo "Failed to extract version from filename: $($exeFile.Name)"
            exit 1
          }


      - name: Release the Package
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ env.VERSION }}"
          name: "${{ env.VERSION }}"
          files: build/ads-*-${{ matrix.build_type }}.exe
